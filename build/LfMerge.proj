<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTarget="Test">
	<PropertyGroup>
		<RootDir Condition="'$(RootDir)'==''">$(MSBuildProjectDirectory)/..</RootDir>
		<Solution>LfMerge.sln</Solution>
		<SolutionPath>$(RootDir)/$(Solution)</SolutionPath>
		<ApplicationName>LfMerge</ApplicationName>
		<ApplicationNameLC>lfmerge</ApplicationNameLC>
		<Configuration Condition="'$(Configuration)'==''">Release</Configuration>
		<useNUnit-x86 Condition="'$(OS)'=='Windows_NT'">true</useNUnit-x86>
		<useNUnit-x86 Condition="'$(OS)'!='Windows_NT'">false</useNUnit-x86>
		<RestartBuild Condition="!Exists('$(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll') Or !Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll') Or !Exists('$(RootDir)/packages/BuildDependencyTasks/BuildDependencyTasks.dll')">true</RestartBuild>
		<RestartBuild Condition="Exists('$(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll') And Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll') And Exists('$(RootDir)/packages/BuildDependencyTasks/BuildDependencyTasks.dll')">false</RestartBuild>
	</PropertyGroup>

	<UsingTask TaskName="FileUpdate"
		AssemblyFile="$(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll"
		Condition="Exists('$(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll')" />
	<UsingTask TaskName="NUnit"
		AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
		Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />
	<UsingTask TaskName="NUnitTeamCity"
		AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)"
		Condition=" '$(teamcity_version)' != '' And '$(OS)'=='Windows_NT'"/>
	<UsingTask TaskName="NUnitTeamCity"
		AssemblyFile="$(agent_home_dir)/plugins/dotnetPlugin/bin/JetBrains.BuildServer.MSBuildLoggers.dll"
		Condition=" '$(teamcity_version)' != '' And '$(OS)'!='Windows_NT'"/>

	<Import Project="NuGet.targets"/>

	<Target Name="Build">
		<CallTarget Targets="RestoreBuildTasks" />
		<CallTarget Targets="BuildInternal" Condition="!$(RestartBuild)" />
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="BuildInternal"
			Properties="Configuration=$(Configuration);RootDir=$(RootDir)"
			Condition="$(RestartBuild)" />
	</Target>

	<Target Name="BuildInternal">
		<Message Text="RestartBuild=$(RestartBuild); $(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll" />
		<Message Text="Exists($(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll)" Condition="Exists('$(RootDir)/packages/MSBuildTasks/tools/MSBuild.Community.Tasks.dll')"/>
		<CallTarget Targets="Clean"/>
		<CallTarget Targets="Compile"/>
		<Message Text="Build Complete"/>
	</Target>

	<Target Name="RestoreBuildTasks" DependsOnTargets="CheckPrerequisites">
		<Message Text="RestartBuild=$(RestartBuild)" />
		<Exec Command='$(NuGetCommand) install GitVersion.CommandLine -excludeVersion -version 4.0.0 -solutionDirectory "$(RootDir)"' />
		<Exec Command='$(NuGetCommand) install BuildDependencyTasks -excludeVersion -version 0.4.3 -solutionDirectory "$(RootDir)"' />
		<Exec Command='$(NuGetCommand) install NUnit.Runners.Net4 -version 2.6.4 -solutionDirectory "$(RootDir)"' />
		<Exec Command='$(NuGetCommand) install MSBuildTasks -excludeVersion -version 1.5.0.235 -solutionDirectory "$(RootDir)"' />
		<Exec Command='$(NuGetCommand) install SIL.BuildTasks -excludeVersion -version 2.2.0 -solutionDirectory "$(RootDir)"' />
	</Target>

	<ItemGroup>
		<ExistingObjectFiles
			Include="$(RootDir)/output/$(Configuration)/**/*"
			Exclude="$(RootDir)/.git/**/*"
		/>
	</ItemGroup>

	<Target Name="Clean">
		<Delete Files="@(ExistingObjectFiles)" />
		<Delete Condition="'$(OS)'=='Windows_NT' Or $(MSBuildToolsVersion) &gt;= 15"
			 Files="$(RootDir)/**/obj/**/*" />
		<Exec Condition="'$(OS)'!='Windows_NT' And $(MSBuildToolsVersion) &lt; 15"
			Command="find . %5c( -name obj -o -name bin -o -name test-results %5c) -type d -print0 | xargs -0 rm -rf"
			WorkingDirectory="$(RootDir)" />
		<Delete Files="build/LfMerge.files" />
	</Target>

	<ItemGroup>
		<AllBuildDependencyTasksFiles Include="$(RootDir)/packages/BuildDependencyTasks*/**"/>
		<AllBuildDependencyTasksDirs Include="@(AllBuildDependencyTasksFiles->'%(RootDir)%(Directory)')"/>
	</ItemGroup>

	<Import Project="LfMerge-DownloadDeps.xml" />

	<Target Name="DownloadDependencies" DependsOnTargets="RestorePackages;RestoreBuildTasks">
		<CallTarget Targets="DownloadDependenciesTarget" />
	</Target>

	<Target Name="PrepareSource" DependsOnTargets="DownloadDependencies;RestorePackages;RestoreBuildTasks">
		<!-- This target gets called before building the source package -->
		<RemoveDir Directories="$(RootDir)/Downloads"/>
	</Target>

	<Target Name="Compile" DependsOnTargets="DownloadDependencies;RestorePackages">
		<Message Text="RootDir=$(RootDir)"/>
		<FileUpdate Files="$(RootDir)/Mercurial/mercurial.ini" Regex="fixutf8=../"
			ReplacementText="fixutf8=$(RootDir)/" ContinueOnError="WarnAndContinue"/>
		<CallTarget Targets="CompileOnly"/>
	</Target>

	<Target Name="CompileOnly">
		<!-- This target gets called during binary package build and shouldn't download
			anything -->
		<MSBuild
			Projects="$(SolutionPath)"
			Targets="Build"
			Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<Exec Command='bash -c "ln -sf ../Mercurial ."' WorkingDirectory="$(RootDir)/output"
			Condition="'$(OS)'=='Unix'"/>
		<CallTarget Targets="TestOnly"/>
	</Target>

	<Target Name="TestOnly" DependsOnTargets="RunNUnitTC;RunNUnit"/>

	<Target Name="RunNUnitTC" Condition="'$(teamcity_version)' != ''">
		<ItemGroup>
			<TestAssemblies Include="$(RootDir)/output/$(Configuration)/*.Tests.dll"
				Exclude="$(RootDir)/output/$(Configuration)/SIL.LCModel*.Tests.dll"/>
		</ItemGroup>

		<NUnitTeamCity
			Assemblies="@(TestAssemblies)"
			ExcludeCategory="SkipOnTeamCity;ByHand$(ExtraExcludeCategories)"
			NUnitVersion="NUnit-2.6.4" />
	</Target>

	<Target Name="RunNUnit" Condition="'$(teamcity_version)' == ''">
		<ItemGroup>
			<TestAssemblies Include="$(RootDir)/output/$(Configuration)/*.Tests.dll"
				Exclude="$(RootDir)/output/$(Configuration)/SIL.LCModel*.Tests.dll"/>
		</ItemGroup>

		<NUnit Assemblies="@(TestAssemblies)"
			ToolPath="$(RootDir)/packages/NUnit.Runners.Net4.2.6.4/tools"
			TestInNewThread="false"
			ExcludeCategory="$(excludedCategories)$(ExtraExcludeCategories)"
			WorkingDirectory="$(RootDir)/output/$(Configuration)"
			Force32Bit="$(useNUnit-x86)"
			Verbose="true"
			OutputXmlFile="$(RootDir)/output/$(Configuration)/TestResults.xml"/>
	</Target>

</Project>
